/* tslint:disable */
/* eslint-disable */
/**
 * goormbread api
 * 구름빵 API입니다.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface GameControllerDeleteGameInformationRequest {
    gameId: string;
}

export interface GameControllerGetGameCommandRequest {
    gameId: string;
}

export interface GameControllerGetGameInformtaionRequest {
    gameId: string;
}

export interface GameControllerPostGameInformationRequest {
    body: object;
}

/**
 * 
 */
export class GameApi extends runtime.BaseAPI {

    /**
     */
    async gameControllerDeleteGameInformationRaw(requestParameters: GameControllerDeleteGameInformationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['gameId'] == null) {
            throw new runtime.RequiredError(
                'gameId',
                'Required parameter "gameId" was null or undefined when calling gameControllerDeleteGameInformation().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/game/{gameId}`.replace(`{${"gameId"}}`, encodeURIComponent(String(requestParameters['gameId']))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async gameControllerDeleteGameInformation(requestParameters: GameControllerDeleteGameInformationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gameControllerDeleteGameInformationRaw(requestParameters, initOverrides);
    }

    /**
     */
    async gameControllerGetAllGameListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/game/all`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async gameControllerGetAllGameList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gameControllerGetAllGameListRaw(initOverrides);
    }

    /**
     */
    async gameControllerGetGameCommandRaw(requestParameters: GameControllerGetGameCommandRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['gameId'] == null) {
            throw new runtime.RequiredError(
                'gameId',
                'Required parameter "gameId" was null or undefined when calling gameControllerGetGameCommand().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/game/{gameId}/pad`.replace(`{${"gameId"}}`, encodeURIComponent(String(requestParameters['gameId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async gameControllerGetGameCommand(requestParameters: GameControllerGetGameCommandRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gameControllerGetGameCommandRaw(requestParameters, initOverrides);
    }

    /**
     */
    async gameControllerGetGameInformtaionRaw(requestParameters: GameControllerGetGameInformtaionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['gameId'] == null) {
            throw new runtime.RequiredError(
                'gameId',
                'Required parameter "gameId" was null or undefined when calling gameControllerGetGameInformtaion().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/game/{gameId}`.replace(`{${"gameId"}}`, encodeURIComponent(String(requestParameters['gameId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async gameControllerGetGameInformtaion(requestParameters: GameControllerGetGameInformtaionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gameControllerGetGameInformtaionRaw(requestParameters, initOverrides);
    }

    /**
     */
    async gameControllerPostGameInformationRaw(requestParameters: GameControllerPostGameInformationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['body'] == null) {
            throw new runtime.RequiredError(
                'body',
                'Required parameter "body" was null or undefined when calling gameControllerPostGameInformation().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/game`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async gameControllerPostGameInformation(requestParameters: GameControllerPostGameInformationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gameControllerPostGameInformationRaw(requestParameters, initOverrides);
    }

    /**
     */
    async gameControllerGetGameThumbnailRaw(requestParameters: GameControllerGetGameCommandRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['gameId'] == null) {
            throw new runtime.RequiredError(
                'gameId',
                'Required parameter "gameId" was null or undefined when calling gameControllerGetGameCommand().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/game/{gameId}/thumbnail`.replace(`{${"gameId"}}`, encodeURIComponent(String(requestParameters['gameId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async gameControllerGetGameThumbnail(requestParameters: GameControllerPostGameInformationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.gameControllerGetGameThumbnailRaw(requestParameters, initOverrides);
    }

}
